import Head from "next/head";
import { useState } from "react";
import axios from "axios";

export default function PasswordSetting() {
    const [oldPassword, setOldPassword] = useState("");
    const [newPassword, setNewPassword] = useState("");
    const [confirmPassword, setConfirmPassword] = useState("");
    const [message, setMessage] = useState("");

    const handleChangePassword = async () => {
        if (newPassword !== confirmPassword) {
            setMessage("New password and confirmation do not match.");
            return;
        }

        try {
            const response = await axios.post("https://192e-163-13-201-95.ngrok-free.app/api/changePassword", {
                oldPassword,
                newPassword,
            });
            setMessage(response.data.message);
        } catch (error) {
            setMessage("Password change failed.");
        }
    };

    return (
        <>
            <Head>
                <title>MVR - Password Change</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="container">
                <div className="blur formBox">
                    <h2 className="title">Change Password</h2>
                    <div className="inputBox">
                        <input
                            type="password"
                            required
                            value={oldPassword}
                            onChange={(e) => setOldPassword(e.target.value)}
                        />
                        <label>Old Password</label>
                    </div>
                    <div className="inputBox">
                        <input
                            type="password"
                            required
                            value={newPassword}
                            onChange={(e) => setNewPassword(e.target.value)}
                        />
                        <label>New Password</label>
                    </div>
                    <div className="inputBox">
                        <input
                            type="password"
                            required
                            value={confirmPassword}
                            onChange={(e) => setConfirmPassword(e.target.value)}
                        />
                        <label>Confirm New Password</label>
                    </div>
                    <button className="submitBtn" onClick={handleChangePassword}>
                        Change Password
                    </button>
                    {message && <p className="centerParagraph">{message}</p>}
                </div>
            </main>

            <style jsx>{`
                .container {
                    position: relative;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    height: 100vh;
                    background-color: #e6e6e6;
                    z-index: 1;
                }

                .blur {
                    background-color: rgba(255, 255, 255, 0.9);
                    border-radius: 10px;
                    backdrop-filter: blur(10px);
                    border: 2px solid rgba(255, 255, 255, .5);
                    box-shadow: 0 0 30px rgba(0, 0, 0, .1);
                    padding: 40px;
                }

                .title {
                    text-align: center;
                    color: #162938;
                    font-weight: bold;
                    margin-bottom: 30px;
                }

                .submitBtn {
                    width: 100%;
                    padding: 15px;
                    border: none;
                    border-radius: 5px;
                    background-color: #4d86b3;
                    color: #fff;
                    cursor: pointer;
                    font-weight: bold;
                    transition: 0.3s ease;
                    margin-top: 30px;
                }

                .submitBtn:hover {
                    transform: scale(1.05);
                }

                .centerParagraph {
                    text-align: center;
                    margin-top: 20px;
                }

                .inputBox {
                    position: relative;
                    width: 100%;
                    margin: 15px 0;
                }

                .inputBox input {
                    width: 100%;
                    height: 45px;
                    background-color: transparent;
                    border: 2px solid #162938;
                    border-radius: 5px;
                    padding: 10px;
                    margin-top: 20px;
                    font-size: 1em;
                    color: #162938;
                }

                .inputBox label {
                    position: absolute;
                    top: 5px;
                    left: 15px;
                    font-size: 1em;
                    color: #162938;
                    font-weight: 500;
                    transition: .5s;
                }

                .inputBox input:focus + label,
                .inputBox input:not(:placeholder-shown) + label {
                    top: -25px;
                    font-size: 0.75em;
                }

                .formBox {
                    padding: 20px 40px;
                    border-radius: 20px;
                    width: 400px;
                    color: black;
                    background: transparent;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    font-size: 1.5em;
                }
            `}</style>
        </>
    );
}
